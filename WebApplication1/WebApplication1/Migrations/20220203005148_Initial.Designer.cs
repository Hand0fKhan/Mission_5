// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1_A.Models;

namespace WebApplication1_A.Migrations
{
    [DbContext(typeof(MovieContext))]
    [Migration("20220203005148_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("WebApplication1_A.Models.ApplicationResponse", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieID = 1,
                            CategoryID = 1,
                            Director = "Gareth Edwards",
                            Edit = false,
                            LentTo = "",
                            Notes = "",
                            Rating = "PG-13",
                            Title = "Rogue One: A Star Wars Story",
                            Year = "2016"
                        },
                        new
                        {
                            MovieID = 2,
                            CategoryID = 1,
                            Director = "Irvin Kershner",
                            Edit = false,
                            LentTo = "",
                            Notes = "",
                            Rating = "PG-13",
                            Title = "Star Wars: Empire Strikes Back",
                            Year = "1980"
                        },
                        new
                        {
                            MovieID = 3,
                            CategoryID = 2,
                            Director = "Chris Sanders",
                            Edit = false,
                            LentTo = "",
                            Notes = "",
                            Rating = "PG",
                            Title = "How to Train Your Dragon",
                            Year = "2010"
                        });
                });

            modelBuilder.Entity("WebApplication1_A.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Science Fantasy"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Fantasy"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Science Fiction"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Adventure"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Complete Waste of Time (Romance)"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Partial Waste of Time (Romantic Comedy)"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "The Perfect Movie- The Princess Bride"
                        });
                });

            modelBuilder.Entity("WebApplication1_A.Models.ApplicationResponse", b =>
                {
                    b.HasOne("WebApplication1_A.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
